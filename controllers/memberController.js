const Member = require('../models/Member');

/**
 * Create a member inside the database
 * @param {*} req Gets the ID, name from the json POST request
 * @param {*} res returns 201 if created else 500 for errors
 */
exports.createMember = async (req, res) => {
    try {
        console.log(res.body);
        const { ID, name } = req.body;
        const newMember = new Member({ ID, name });
        await newMember.save();
        res.status(201).json(newMember);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};

/**
 * Gets all the members from the database
 * @param {*} req The GET request
 * @param {*} res returns 200 if req is successful else 500
 */
exports.getAllMembers = async (req, res) => {
    try {
        const members = await Member.find();
        res.status(200).json(members);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};

/**
 * Updates a member from the database using the _id tag that is autogenerated
 * @param {*} req The PUT request that contains the :id in params
 * @param {*} res returns 200 if successfully updated member else 500
 * @returns 
 */
exports.updateMember = async (req, res) => {
    try {
        const { id } = req.params;
        const updatedMember = await Member.findByIdAndUpdate(id, req.body, { new: true });
        if (!updatedMember) return res.status(404).json({ error: 'Member not found' });
        res.status(200).json(updatedMember);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};

/**
 * Deletes a member from the database using the _id tag
 * @param {*} req The DELETE request that contains the :id in params
 * @param {*} res returns 200 if successfully deleted the member else 500
 * @returns 
 */
exports.deleteMember = async (req, res) => {
    try {
        const { id } = req.params;
        const deletedMember = await Member.findByIdAndDelete(id);
        if (!deletedMember) return res.status(404).json({ error: 'Member not found' });
        res.status(200).json({ message: 'Member deleted successfully' });
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};
