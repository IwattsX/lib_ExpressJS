const Staff = require('../models/Staff');

/**
 * Create a staff inside the database
 * @param {*} req Gets the ID, name from the json POST request
 * @param {*} res returns 201 if created else 500 for errors
 */
exports.createStaff = async (req, res) => {
    try {
        console.log(res.body);
        const { ID, name } = req.body;
        const newstaff = new Staff({ ID, name });
        await newstaff.save();
        res.status(201).json(newstaff);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};


/**
 * Gets all the staffs from the database
 * @param {*} req The GET request
 * @param {*} res returns 200 if req is successful else 500
 */
exports.getAllStaff = async (req, res) => {
    try {
        const staff = await Staff.find();
        res.status(200).json(staff);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};

/**
 * Updates a staff from the database using the _id tag that is autogenerated
 * @param {*} req The PUT request that contains the :id in params
 * @param {*} res returns 200 if successfully updated staff else 500
 * @returns 
 */
exports.updateStaff = async (req, res) => {
    try {
        const { id } = req.params;
        const updatedStaff = await Staff.findByIdAndUpdate(id, req.body, { new: true });
        if (!updatedStaff) return res.status(404).json({ error: 'Staff not found' });
        res.status(200).json(updatedStaff);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};

/**
 * Deletes a staff from the database using the _id tag
 * @param {*} req The DELETE request that contains the :id in params
 * @param {*} res returns 200 if successfully deleted the staff else 500
 * @returns 
 */
exports.deleteStaff = async (req, res) => {
    try {
        const { id } = req.params;
        const deletedStaff = await Staff.findByIdAndDelete(id);
        if (!deletedStaff) return res.status(404).json({ error: 'Staff not found' });
        res.status(200).json({ message: 'Staff deleted successfully' });
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};
